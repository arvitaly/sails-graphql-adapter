{
  "name": "Sails-graphql-adapter-docs",
  "tagline": "",
  "body": "# Sails GraphQL adapter \r\n\r\n[GraphQL](http://graphql.org/) and [Relay](https://facebook.github.io/relay/) interface for [Sails](http://sailsjs.org/) applications. (IN DEVELOPMENT).\r\n\r\n[![Build Status](https://travis-ci.org/arvitaly/sails-graphql-adapter.svg?branch=master)](https://travis-ci.org/arvitaly/sails-graphql-adapter) \r\n[![npm version](https://badge.fury.io/js/sails-graphql-adapter.svg)](https://badge.fury.io/js/sails-graphql-adapter) \r\n[![Coverage Status](https://coveralls.io/repos/github/arvitaly/sails-graphql-adapter/badge.svg?branch=master)](https://coveralls.io/github/arvitaly/sails-graphql-adapter?branch=master) \r\n[![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\r\n\r\n\r\n\r\n# Install\r\n\r\n## Automatic install by sails hook\r\n\r\nYou can use sails-hook-graphql for automatic binding this adapter. More info about config https://github.com/arvitaly/sails-hook-graphql#configure\r\n\r\n    npm install sails-hook-graphql --save\r\n\r\n## Manual install\r\n\r\nYou can use `generate` and `controller`\r\n\r\n    npm install sails-graphql-adapter --save\r\n\r\n    //Generate GraphQL schema\r\n    const generate = require(\"sails-graphql-adapter\").generate;\r\n    const schema = generate(sails);\r\n    //Controller for graphql queries\r\n    const Controller = require(\"sails-graphql-adapter\").controller;\r\n    const controller = Controller({schema: schema}); // {index:(req, res)=>void}\r\n\r\n    //example manual binding\r\n    // config/routes.js\r\n    {\r\n        \"/graphql\" : \"GraphQLController:index\"\r\n    }\r\n    // api/controllers/GraphQLController.js\r\n    module.export = controller;\r\n\r\n# Documentation\r\n\r\n## Queries\r\n\r\nFor every model generated 3 query object:\r\n\r\n1. Single model, like `user(where:{id:1}){ name }`\r\n\r\n2. Connection for list of model, like `users(where:{nameContains:\"Jo\"}){ edges{ node{id, firstName }} }`\r\n\r\n3. Count, like `countUsers(where:{birthdayGreaterThan:\"Fri Nov 18 2016 17:39:43 GMT+0700 (SE Asia Standard Time)\"}){ count }` // Not implemented now\r\n\r\n## Mutations\r\n\r\nFor every model generated mutations:\r\n\r\n1. Update mutation with setters, like `updateUsers(where:{heightGreaterThan:150} user:{ setHeight( height: 151) } ){ users{ height } }`\r\n\r\n2. Create mutation with submodel creations, like `createUser(id: 1, father : 16, createPet:{name: \"Rex\"} ){ user{ name } }`\r\n\r\n3. Destroy mutation by id, like destroyUserById(id: 15) // Not implemented now\r\n\r\n## Subscriptions //TODO\r\n\r\nSubscriptions looked like queries\r\n\r\n\r\n# API\r\n\r\n## generate(sails): GraphQLSchema;\r\n\r\nArg `sails` is initialized sails-app. Should be initialized ORM. This may be after hook-event `hook:orm:loaded` or using config/bootstrap.js\r\n\r\nGraphQLSchema - native schema from [graphql-js](https://github.com/graphql/graphql-js)\r\n\r\n## controller(opts?: {schema?: GraphQLSchema;  sails? }) : {index: (req, res, next)=>void };\r\n\r\nController generate method for request and ready for using as sails-controller.\r\n\r\nYou can create it with schema or sails (like in `generate`).\r\n\r\nController use native [express-graphql adapter](https://github.com/graphql/express-graphql).\r\n\r\n# Tests\r\n\r\n    npm install    \r\n    npm test\r\n    \r\n# TODO\r\n\r\n- [ ] Args for find https://github.com/arvitaly/sails-graphql-adapter/issues/1\r\n    - [ ] Tests\r\n- [ ] Queries\r\n    - [x] Single query\r\n        - [x] Tests\r\n    - [ ] Connection query\r\n        - [ ] Tests    \r\n- [ ] Node object\r\n    - [ ] Tests\r\n- [ ] Mutations\r\n    - [x] Update\r\n         - [ ] Tests\r\n    - [x] Create\r\n        - [x] Submodel recursively create\r\n            - [ ] Tests\r\n        - [ ] Tests\r\n    - [ ] DestroyById\r\n        - [ ] Tests        \r\n- [ ] Subscriptions\r\n    - [ ] Tests\r\n- [ ] Documentation",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}